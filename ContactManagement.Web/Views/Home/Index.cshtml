@using ContactManagement.Core
@model List<Contact>

@{
    ViewBag.Title = "Home Page";
}

<main class="container-fluid px-0">
    <div class="container">
        <h1 class="display-4 mb-4">Contacts</h1>

        <div class="d-flex justify-content-between align-items-center mb-4">
            @Html.ActionLink("Create New", "Create", "Contacts",
                null,
                new { @class = "btn btn-success" })

            <!-- Search Form -->
            @using (Html.BeginForm("Index", "Home", FormMethod.Get, new { id = "searchForm" }))
            {
                <div class="input-group" style="width: 300px;">
                    <input type="text" class="form-control" name="searchTerm"
                           placeholder="Search contacts..." value="@ViewBag.SearchTerm" id="searchInput">
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary border-left-0" type="submit" id="searchButton">
                            <span id="searchIcon"><i class="fas fa-search"></i></span>
                            <span id="searchSpinner" class="spinner-border spinner-border-sm d-none" role="status"></span>
                        </button>
                    </div>
                </div>
            }
        </div>

        @if (!Model.Any())
        {
            <div class="alert alert-info">
                @if (!string.IsNullOrEmpty(ViewBag.SearchTerm))
                {
                    <span>No contacts found matching '@ViewBag.SearchTerm'</span>
                }
                else
                {
                    <span>No contacts found</span>
                }
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model[0].FirstName)</th>
                            <th>@Html.DisplayNameFor(model => model[0].LastName)</th>
                            <th class="d-none d-md-table-cell">@Html.DisplayNameFor(model => model[0].CompanyName)</th>
                            <th class="d-none d-lg-table-cell">@Html.DisplayNameFor(model => model[0].Mobile)</th>
                            <th class="d-none d-lg-table-cell">@Html.DisplayNameFor(model => model[0].Email)</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                                <td class="d-none d-md-table-cell">@Html.DisplayFor(modelItem => item.CompanyName)</td>
                                <td class="d-none d-lg-table-cell">@Html.DisplayFor(modelItem => item.Mobile)</td>
                                <td class="d-none d-lg-table-cell">@Html.DisplayFor(modelItem => item.Email)</td>
                                <td>
                                    <div class="btn-group btn-group-sm" role="group">
                                        @Html.ActionLink("Details", "Details", "Contacts",
                                            new { id = item.Id },
                                            new { @class = "btn btn-info" })

                                        @Html.ActionLink("Edit", "Edit", "Contacts",
                                            new { id = item.Id },
                                            new { @class = "btn btn-primary" })

                                        @Html.ActionLink("Delete", "Delete", "Contacts",
                                            new { id = item.Id },
                                            new { @class = "btn btn-danger" })
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</main>

@section Scripts {

    <script>
        $(function () {
            $('#searchForm').submit(function () {
                $('#searchButton').prop('disabled', true);
                $('#searchIcon').addClass('d-none');
                $('#searchSpinner').removeClass('d-none');
            });
        });
    </script>
    <style>
        .input-group-append .btn {
            border-top-left-radius: 0 !important;
            border-bottom-left-radius: 0 !important;
            margin-left: -1px; /* Remove double border */
        }

        .input-group .form-control:not(:first-child) {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
    </style>
}
<style>
    /* Custom responsive tweaks */
    @@media (max-width: 768px) {
        .btn-group {
            display: flex;
            flex-direction: column;
        }

            .btn-group .btn {
                margin-bottom: 5px;
                width: 100%;
            }

        .input-group {
            width: 100% !important;
            margin-top: 10px;
        }

        .d-flex.justify-content-between {
            flex-direction: column;
        }
    }
</style>